{"ast":null,"code":"import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport \"./BestBooks.css\";\nimport axios from \"axios\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BestBooks extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      const {\n        user,\n        isAuthenticated\n      } = this.props.auth0;\n      consturl = `http://localhost:3010/get?email=${user.email}`;\n      axios.get(url).then(result => {\n        this.setState({\n          arr: result.data\n        });\n        console.log(result.data);\n      }).catch(err => {\n        console.log(\"err in getting\");\n      });\n    };\n\n    this.postdata = () => {\n      obj = {\n        instructions: event.target.instructions.value,\n        name: event.target.name.value\n      };\n      url = `http://localhost:3010/postdata`, obj;\n      axios.post(url).then(result => {\n        this.setState({\n          arr: result.data\n        });\n      }).catch(err => {\n        console.log(\"err in getting\");\n      });\n    };\n\n    this.update = event => {\n      preventDefault();\n      obj = {\n        instructions: event.target.instructions.value,\n        name: event.target.name.value\n      };\n      url = `http://localhost:3010/updatedata/id`, obj;\n      axios.put(url).then(result => {\n        this.setState({\n          arr: result.data\n        });\n      }).catch(err => {\n        console.log(\"err in getting\");\n      });\n    };\n\n    this.state = {\n      arr: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default _c = withAuth0(BestBooks);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["/home/marwan/asac/forexam/frontend/src/BestBooks.js"],"names":["React","Jumbotron","axios","BestBooks","Component","constructor","props","componentDidMount","user","isAuthenticated","auth0","consturl","email","get","url","then","result","setState","arr","data","console","log","catch","err","postdata","obj","instructions","event","target","value","name","post","update","preventDefault","put","state","render","withAuth0"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAO,iBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AACA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,iBANmB,GAMC,MAAM;AACxB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAA8B,KAAKH,KAAL,CAAWI,KAA/C;AACAC,MAAAA,QAAQ,GAAI,mCAAkCH,IAAI,CAACI,KAAM,EAAzD;AACAV,MAAAA,KAAK,CACFW,GADH,CACOC,GADP,EAEGC,IAFH,CAESC,MAAD,IAAY;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,GAAG,EAAEF,MAAM,CAACG;AADA,SAAd;AAGAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACG,IAAnB;AACD,OAPH,EAQGG,KARH,CAQUC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,OAVH;AAWD,KApBkB;;AAAA,SAsBnBG,QAtBmB,GAsBR,MAAM;AAEfC,MAAAA,GAAG,GAAC;AACFC,QAAAA,YAAY,EAACC,KAAK,CAACC,MAAN,CAAaF,YAAb,CAA0BG,KADrC;AAEFC,QAAAA,IAAI,EAACH,KAAK,CAACC,MAAN,CAAaE,IAAb,CAAkBD;AAFrB,OAAJ;AAKAf,MAAAA,GAAG,GAAI,gCAAP,EAAuCW,GAAvC;AACCvB,MAAAA,KAAK,CACL6B,IADA,CACKjB,GADL,EAEAC,IAFA,CAEMC,MAAD,IAAY;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,GAAG,EAAEF,MAAM,CAACG;AADA,SAAd;AAGD,OANA,EAOAG,KAPA,CAOOC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,OATA;AASG,KAvCa;;AAAA,SAyCnBW,MAzCmB,GAyCTL,KAAD,IAAW;AAClBM,MAAAA,cAAc;AACdR,MAAAA,GAAG,GAAC;AACFC,QAAAA,YAAY,EAACC,KAAK,CAACC,MAAN,CAAaF,YAAb,CAA0BG,KADrC;AAEFC,QAAAA,IAAI,EAACH,KAAK,CAACC,MAAN,CAAaE,IAAb,CAAkBD;AAFrB,OAAJ;AAKAf,MAAAA,GAAG,GAAI,qCAAP,EAA4CW,GAA5C;AACCvB,MAAAA,KAAK,CACLgC,GADA,CACIpB,GADJ,EAEAC,IAFA,CAEMC,MAAD,IAAY;AAChB,aAAKC,QAAL,CAAc;AACZC,UAAAA,GAAG,EAAEF,MAAM,CAACG;AADA,SAAd;AAGD,OANA,EAOAG,KAPA,CAOOC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,OATA;AASG,KA1Da;;AAEjB,SAAKc,KAAL,GAAa;AACXjB,MAAAA,GAAG,EAAE;AADM,KAAb;AAGD;;AA+DDkB,EAAAA,MAAM,GAAG;AACP,wBAAO,qCAAP;AACD;;AAvEqC;;AA0ExC,oBAAeC,SAAS,CAAClC,SAAD,CAAxB","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport \"./BestBooks.css\";\nimport axios from \"axios\";\nclass BestBooks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      arr: [],\n    };\n  }\n  componentDidMount = () => {\n    const { user, isAuthenticated,  } = this.props.auth0;\n    consturl = `http://localhost:3010/get?email=${user.email}`;\n    axios\n      .get(url)\n      .then((result) => {\n        this.setState({\n          arr: result.data,\n        });\n        console.log(result.data)\n      })\n      .catch((err) => {\n        console.log(\"err in getting\");\n      });\n  };\n\n  postdata = () => {\n   \n    obj={\n      instructions:event.target.instructions.value,\n      name:event.target.name.value\n    }\n\n    url = `http://localhost:3010/postdata`,obj;\n     axios\n    .post(url)\n    .then((result) => {\n      this.setState({\n        arr: result.data,\n      });\n    })\n    .catch((err) => {\n      console.log(\"err in getting\");\n    });};\n\n  update = (event) => {\n    preventDefault()\n    obj={\n      instructions:event.target.instructions.value,\n      name:event.target.name.value\n    }\n\n    url = `http://localhost:3010/updatedata/id`,obj;\n     axios\n    .put(url)\n    .then((result) => {\n      this.setState({\n        arr: result.data,\n      });\n    })\n    .catch((err) => {\n      console.log(\"err in getting\");\n    });};\n\n\n\n\n\n\n\n\n\n  render() {\n    return <></>;\n  }\n}\n\nexport default withAuth0(BestBooks);\n"]},"metadata":{},"sourceType":"module"}